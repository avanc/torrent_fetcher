#! /usr/bin/env python

# Copyright (C) 2013 Sven Klomp (mail@klomp.eu)
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301, USA.

import sys
sys.path.append("/home/klomp/workspace/torrent_fetcher/src/")

from fetcher import parameter
from fetcher import config
from fetcher import otr

import datetime

import logging
logger = logging.getLogger()

if __name__ == '__main__':
    options = parameter.parse()
    configdata=config.load(options.configfile)
    
    delay=datetime.timedelta(hours=configdata["delay"])
    timeout=datetime.timedelta(hours=configdata["timeout"])
    
    for recording in configdata["recordings"]:
        logger.debug("Checking {0}".format(recording.titel))
        while ( (recording.recurrence is not None) and (recording.datetime+delay<datetime.datetime.today()) ):
            torrent_name=recording.getTorrentName()
            result = otr.fetchTorrent(torrent_name, "{0}/{1}.torrent".format(configdata["folder"], torrent_name))
            if result:
                recording.next()
            elif recording.datetime+timeout<datetime.datetime.today():
                logger.error("Could not find {0}. Skipping this torrent!".format(torrent_name))
                recording.next()
            else:
                break;
    
    config.save(configdata, options.configfile)